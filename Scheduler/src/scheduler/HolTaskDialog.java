/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package scheduler;

import java.util.ArrayList;
import java.util.Set;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 * Creates new form HolTaskDialog which is used for two purposes 1) to allow assignment
 * of tasks to people and 2) to allow assignment of people to holidays
 * The convention as to what the contents of holidays and assignments mean is
 * set in this module. In both "Y" means available. Thus for holidays we will
 * display in this dialog entries where the value is "N" since a holiday means 
 * unavailable for duty. On the other hand the assignments will show entries
 * with a "Y" in this dialog since the the individual is available for that 
 * duty. Initialisations will also differ. Holidays will be initiated with
 * "Y" (default is available), assignments with "N" (Default is unavailable).
 * @author jonathan.waterhouse@gmail.com
 */
public class HolTaskDialog extends javax.swing.JDialog {
    private String Source;
    private String yesNoInd;
    private String reverseYesNoInd;
    private String seperator;
    private flex2DArray f; // Holidays or assignments depending on source variable in constructor

    /**
     * Display the dialog in its initial state.
     * @param parent the main gui element from which the dialog is started
     * @param modal is the dialog box modal or not
     * @param source String denoting whether we are displaying task or holiday 
     * assignments
     */
    public HolTaskDialog(java.awt.Frame parent, boolean modal,String source) {
        super(parent, modal);
        initComponents();
        // Application specific initialisation
        this.setTitle(source); //Title
        // Get people, dates and tasks allowed master data
        Source = source;
        Schedule s = new Schedule();
        // Set list of people
        DefaultTableModel TM = new DefaultTableModel(s.getPeople().size(),0);
        TM.addColumn("", s.getPeople().toArray());
        personJTable.setModel(TM);
        //Set some variables for later use
        String objectFile;
        if (Source.equals("Holidays")) {
            yesNoInd = "N"; //Meaning chosen holidays are unavailable to schedule
            reverseYesNoInd = "Y";
        }
        else if (Source.equals("Assignments")) {
            yesNoInd = "Y"; //Meaning chosen assignments are available to schedule
            reverseYesNoInd = "N";
        }
        // Display dates and tasks allowed master data
        DefaultListModel allowedLM = new DefaultListModel();
        allowedList.setModel(allowedLM);
        if (Source.equals("Holidays")){
            for (String date : s.getTaskDates().getColKeys()) allowedLM.addElement(date);
        }
        else {
            for (String task : s.getTaskDates().getRowKeys()) allowedLM.addElement(task);
        }
        //If assignments of holidays/tasks already made, show those
        if (Source.equals("Holidays")) f = s.getHolidays();
        else if (source.equals("Assignments")) f = s.getAssignments();
        else f = s.getHolidays();
        DefaultListModel chosenLM = new DefaultListModel();
        chosenList.setModel(chosenLM);
        try{
            Set<String> st = f.getColKeysForRow((String)TM.getValueAt(0, 0),yesNoInd);
            for (String p : st) chosenLM.addElement(p);
        }
        catch (NullPointerException e){
            // for (String line : f.print(seperator)) System.out.println();
        }
        seperator = s.SEPERATOR;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane3 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        allowedLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        allowedList = new javax.swing.JList();
        addButton = new javax.swing.JButton();
        removeButton = new javax.swing.JButton();
        closeButton = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        chosenList = new javax.swing.JList();
        chosenLabel = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        personJTable = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        initialiseButton = new javax.swing.JButton();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane3.setViewportView(jTable1);

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Holidays and Task Assignments");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Chooser"));

        allowedLabel.setText("Allowed");

        allowedList.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        allowedList.setVisibleRowCount(20);
        jScrollPane1.setViewportView(allowedList);

        addButton.setText(">");
        addButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addButtonActionPerformed(evt);
            }
        });

        removeButton.setText("<");
        removeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeButtonActionPerformed(evt);
            }
        });

        closeButton.setForeground(new java.awt.Color(255, 51, 51));
        closeButton.setText("Close");
        closeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeButtonActionPerformed(evt);
            }
        });

        jScrollPane2.setViewportView(chosenList);

        chosenLabel.setText("Chosen");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(allowedLabel))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(addButton)
                            .addComponent(removeButton))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(chosenLabel)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(closeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(allowedLabel)
                    .addComponent(chosenLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane2)
                        .addGap(18, 18, 18)
                        .addComponent(closeButton))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(addButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(removeButton)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane1))
                .addContainerGap())
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Person"));

        personJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                ""
            }
        ));
        personJTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                personJTableMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(personJTable);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 125, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 240, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        initialiseButton.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        initialiseButton.setText("Initialise");
        initialiseButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                initialiseButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(initialiseButton, javax.swing.GroupLayout.DEFAULT_SIZE, 105, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(initialiseButton, javax.swing.GroupLayout.DEFAULT_SIZE, 91, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(22, 22, 22)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 18, Short.MAX_VALUE))
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void initialiseButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_initialiseButtonActionPerformed
        
        if (JOptionPane.showConfirmDialog(null, "Are you sure?","Confirm", JOptionPane.YES_NO_OPTION) ==
                JOptionPane.OK_OPTION) {
            this.initialise(Source);
            DefaultListModel DLM = new DefaultListModel();
            chosenList.setModel(DLM);
            DLM.clear();
        }
    }//GEN-LAST:event_initialiseButtonActionPerformed

    private void closeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeButtonActionPerformed
        this.dispose();
    }//GEN-LAST:event_closeButtonActionPerformed

    private void removeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeButtonActionPerformed
        //Deal with the screen, removing selected values
        Object[] L = chosenList.getSelectedValues();
        DefaultListModel LM = (DefaultListModel) chosenList.getModel();
        for (Object O : L) {
            LM.removeElement(O);
        }
        //Deal with the data storage
        DefaultTableModel TM = (DefaultTableModel) personJTable.getModel();
        String rowKey = (String) TM.getValueAt(personJTable.getSelectedRow(),0);
        f.deleteRow(rowKey);
        ArrayList<String> selections = new ArrayList();
        for (int i = 0; i < chosenList.getModel().getSize(); i++) {
            f.add(rowKey, (String) chosenList.getModel().getElementAt(i), yesNoInd);
        }
        //Store the new stuff
        Schedule s = new Schedule();
        if (Source.equals("Holidays")) s.setHolidays(f);
        else s.setAssignments(f);
    }//GEN-LAST:event_removeButtonActionPerformed
// Got here
    private void addButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addButtonActionPerformed
        //Deal with the selected values
        Object[] L = allowedList.getSelectedValues();
        DefaultListModel LM = (DefaultListModel) chosenList.getModel();
        for (Object O : L) LM.addElement(O);
        // What people selected in jTable?
        ArrayList<String> peopleSelected  = new ArrayList();
        DefaultTableModel TM = (DefaultTableModel) personJTable.getModel();
        int numRows = personJTable.getSelectedRowCount();
        int[] rows = new int[numRows];
        rows = personJTable.getSelectedRows(); 
        for (int i = 0; i < numRows; i++) {
            String task = (String) TM.getValueAt(rows[i],0);
            peopleSelected.add(task) ;
        }
        if (peopleSelected.size() == 0){
                JOptionPane.showMessageDialog(getContentPane(),"Please select an existing or add a new task.");
                return;
        }
        //
        for (String p : peopleSelected){
            f.deleteRow(p);
            ArrayList<String> selections = new ArrayList();
            for (int i = 0; i < chosenList.getModel().getSize(); i++) {
                f.add(p,(String) chosenList.getModel().getElementAt(i),yesNoInd);
            }            
        }
        //Store the new stuff        
        Schedule s = new Schedule();
        if (Source.equals("Holidays")) s.setHolidays(f);
        else s.setAssignments(f);
    }//GEN-LAST:event_addButtonActionPerformed

    private void personJTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_personJTableMouseClicked
        //If assignments of holidays already made, show those
        DefaultListModel chosenLM = new DefaultListModel();
        chosenList.setModel(chosenLM);
        DefaultTableModel TM = (DefaultTableModel) personJTable.getModel();
        try{
            Set<String> s = f.getColKeysForRow((String)TM.getValueAt(personJTable.getSelectedRow(),0),yesNoInd);
            for (String p : s) chosenLM.addElement(p);
        }
        catch (NullPointerException e){
            // for (String line : f.print(seperator)) System.out.println();
        }
    }//GEN-LAST:event_personJTableMouseClicked
    
    private void initialise(String src){
        Schedule sdb = new Schedule();
        if (src.equals("Holidays")) {
            sdb.initHolidays();
            f = sdb.getHolidays();
        }
        else if (src.equals("Assignments")) {
            sdb.initAssignments();
            f = sdb.getAssignments();
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addButton;
    private javax.swing.JLabel allowedLabel;
    private javax.swing.JList allowedList;
    private javax.swing.JLabel chosenLabel;
    private javax.swing.JList chosenList;
    private javax.swing.JButton closeButton;
    private javax.swing.JButton initialiseButton;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable personJTable;
    private javax.swing.JButton removeButton;
    // End of variables declaration//GEN-END:variables
}
